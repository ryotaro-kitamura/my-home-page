{"version":3,"sources":["images/IMG20190117173225.jpg","images/ruby_on_rails.svg","images/tasumane-top.png","images/seize-the-day.png","images/portfolio.png","components/atoms/Icon/index.tsx","components/atoms/Card/index.tsx","components/molecules/SkillCard/index.tsx","screen/AboutScreen/data.tsx","screen/AboutScreen/index.tsx","components/molecules/PortfolioCard/index.tsx","screen/PortFolioScreen/data.tsx","screen/PortFolioScreen/index.tsx","components/atoms/NavigationBar/index.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["module","exports","Icon","className","url","src","alt","Card","children","href","SkillCard","props","icon","name","period","description","ReactIcon","JSIcon","HTMLIcon","CSSIcon","AngularIcon","BaseBallIcon","CodingIcon","TravelIcon","StudyIcon","Skills","RubyIcon","Hobbies","AboutScreen","myIcon","map","PortfolioCard","text","img","date","PortFolios","id","seize_the_day","portfolio","tasumane","PortFolioScreen","aboutIcon","portfolioIcon","NavigationBar","to","library","add","fab","fas","far","App","basename","process","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","Fragment","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.811ac32c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/IMG20190117173225.6c607db3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/ruby_on_rails.bcb113b9.svg\";","module.exports = __webpack_public_path__ + \"static/media/tasumane-top.94c7c3a0.png\";","module.exports = __webpack_public_path__ + \"static/media/seize-the-day.8b76ad26.png\";","module.exports = __webpack_public_path__ + \"static/media/portfolio.2916ed5d.png\";","import React from \"react\";\n\ninterface IconProps {\n  className: string;\n  url: string;\n}\n\nconst Icon: React.FC<IconProps> = ({ className, url }) => {\n  return <img className={className + \" Icon\"} src={url} alt='' />;\n};\n\nexport default Icon;\n","import React from \"react\";\n\ninterface CardProps {\n  className?: string;\n  url?: string;\n  children: React.ReactNode;\n}\n\nconst Card: React.FC<CardProps> = ({ className, url, children }) => {\n  return (\n    <div className={className + \" Card\"}>\n      {url ? (\n        <a className='Card__Link' href={url ? url : \"\"}>\n          {children}\n        </a>\n      ) : (\n        children\n      )}\n    </div>\n  );\n};\n\nexport default Card;\n","import React from 'react';\nimport { AboutPageCardProps } from '../../../screen/AboutScreen/aboutScreen';\nimport Card from '../../atoms/Card';\n\nconst SkillCard = (props: Partial<AboutPageCardProps>) => {\n  return (\n    <Card className=\"SkillCard\">\n      {typeof props.icon === 'string' ? (\n        <img className=\"SkillCard__Icon_image\" src={props.icon} alt=\"\" />\n      ) : (\n        <p className=\"SkillCard__Icon\">{props.icon}</p>\n      )}\n      <div className=\"SkillCard__Text\">\n        <p className=\"SkillCard__Title\">{props.name}</p>\n        {props.period && <p className=\"SkillCard__Period\">{props.period}</p>}\n        <p className=\"SkillCard__Description\">{props.description}</p>\n      </div>\n    </Card>\n  );\n};\n\nexport default SkillCard;\n","\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\n// RubyIcon のみ fonawsome にないので svg を使用\nimport RubyIcon from '../../images/ruby_on_rails.svg';\nimport { AboutPageCardProps } from './aboutScreen';\n\n//Skill Icons\nconst ReactIcon = <FontAwesomeIcon icon={['fab', 'react']} />;\nconst JSIcon = <FontAwesomeIcon icon={['fab', 'js-square']} />;\nconst HTMLIcon = <FontAwesomeIcon icon={['fab', 'html5']} />;\nconst CSSIcon = <FontAwesomeIcon icon={['fab', 'css3-alt']} />;\nconst AngularIcon = <FontAwesomeIcon icon={['fab', 'angular']} />;\n\n//Hobby Icons\nconst BaseBallIcon = <FontAwesomeIcon icon={['fas', 'baseball-ball']} />;\nconst CodingIcon = <FontAwesomeIcon icon={['fas', 'code']} />;\nconst TravelIcon = <FontAwesomeIcon icon={['fas', 'plane-departure']} />;\nconst StudyIcon = <FontAwesomeIcon icon={['fab', 'leanpub']} />;\n\n\nexport const Skills:AboutPageCardProps[] = [\n  {\n    name: 'Angular',\n    icon: AngularIcon,\n    period: '6ヶ月',\n    description:\n      '今個人的な興味が一番強い言語です。開発経験は実務経験が6ヶ月ほどあります。「責務」をものすごく重視している感じが好きです。'\n  },\n  {\n    name: 'React.Js',\n    icon: ReactIcon,\n    period: '5ヶ月',\n    description:\n      '開発経験が Angular の次に多いです。本サイトもReactを使用しています。Reactってなんかかっこいいですよね。'\n  },\n  {\n    name: 'TypeScript',\n    icon: JSIcon,\n    period: '6ヶ月',\n    description:\n      'React も Angular も開発は基本的に TypeScript を使用。型定義しないとリアルにコード書けません。。'\n  },\n  {\n    name: 'JavaScript',\n    icon: JSIcon,\n    period: '約1年ほど',\n    description:\n      'React, Angular, TypeScript を学ぶ上で基礎となるので一番大切にしています。そんなに難しくないコードなら読んである程度は理解することができます'\n  },\n  {\n    name: 'HTML',\n    icon: HTMLIcon,\n    period: '約1年ほど',\n    description: '読んで理解することは可能です。上級レベルについてはこれからです。'\n  },\n  {\n    name: 'CSS',\n    icon: CSSIcon,\n    period: '約1年ほど',\n    description:\n      '得意ではないですが、本サイトくらいのデザインが実装できるレベルはあります。'\n  },\n  {\n    name: 'Ruby',\n    icon: RubyIcon,\n    period: '5ヶ月ほど',\n    description: 'バックエンド開発で多少触っていました。実務での使用頻度が少なかったこともありまだまだ勉強中です'\n  }\n];\n\n// hobby Icons\n\nexport const Hobbies: Partial<AboutPageCardProps>[] = [\n  {\n    name: '野球',\n    icon: BaseBallIcon,\n    description: '中高6年間野球部に所属してました。現在は観戦オンリーです。'\n  },\n  {\n    name: 'プログラミング',\n    icon: CodingIcon,\n    description: '空き時間はだいたいコーディングしています。最近は Rails を勉強しています。'\n  },\n  {\n    name: '言語学習',\n    icon: StudyIcon,\n    description:\n      '中国語や英語を学んでます。習った言語で海外のドラマや映画を見るのが好きです。台湾に長期留学の経験もあります'\n  },\n  {\n    name: '旅行',\n    icon: TravelIcon,\n    description:\n      '海外旅行が好きです。もっぱらアジアが多いです。'\n  }\n];","import React from 'react';\nimport Icon from '../../components/atoms/Icon';\nimport Card from '../../components/molecules/SkillCard';\nimport myIcon from '../../images/IMG20190117173225.jpg';\nimport { Hobbies, Skills } from './data';\n\nconst AboutScreen = () => {\n  return (\n    <div className=\"AboutScreen\">\n      <div className=\"AboutScreen__Container\">\n        <div className=\"AboutScreen__Content\">\n          <h2 className=\"AboutScreen__Title\">\n            <span>About me</span>\n          </h2>\n          <div className=\"AboutScreen__MyData\">\n            <div className=\"AboutScreen__MyIconArea\">\n              <Icon className=\"AboutScreen__MyIcon\" url={myIcon} />\n            </div>\n            <div className=\"AboutScreen__Description\">\n              <p>こんにちは、Ryotaro です。</p>\n              <p>\n                21卒エンジニア志望で、現在は長期インターンでWeb開発をしています。\n              </p>\n              <p>\n                フロントエンド周りの開発経験が一番多く、個人的にも大好きです。\n              </p>\n              <p>\n                サーバーサイド周りの開発経験は少ないですがロジックを考えるのは好きで、フロント側にデータ渡してそれをきれいに表示できたときの喜びが好きです笑\n              </p>\n            </div>\n          </div>\n        </div>\n        <div className=\"AboutScreen__Content\">\n          <h2 className=\"AboutScreen__Title\">\n            <span>My Skills</span>\n          </h2>\n          <div className=\"AboutScreen__Description\">\n            <p>現在使用している技術は以下の通りです。</p>\n            <p>\n              尚、ここに無い技術でも、興味のある技術に関してはしっかりキャッチアップしていく所存です。\n            </p>\n          </div>\n          <div className=\"AboutScreen__CardsArea\">\n            {Skills.map(({ name, icon, period, description }) => (\n              <div className=\"AboutScreen__SkillCard\">\n                <Card\n                  name={name}\n                  icon={icon}\n                  period={period}\n                  description={description}\n                />\n              </div>\n            ))}\n          </div>\n        </div>\n        <div className=\"AboutScreen__Content\">\n          <h2 className=\"AboutScreen__Title\">\n            <span>My Hobby</span>\n          </h2>\n          <div className=\"AboutScreen__Description\">\n            <p>趣味はそんなに多くなくて、強いてあげるならというのが以下の4つです。</p>\n            <p>\n              ハマれる趣味を探し求めています\n            </p>\n          </div>\n          <div className=\"AboutScreen__CardsArea\">\n            {Hobbies.map(({ name, icon, description }) => (\n              <div className=\"AboutScreen__SkillCard\">\n                <Card name={name} icon={icon} description={description} />\n              </div>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default AboutScreen;\n","import React from 'react';\nimport { Portfolio } from '../../../screen/PortFolioScreen/types';\nimport Card from '../../atoms/Card';\n\nconst PortfolioCard: React.FC<Partial<Portfolio>> = ({\n  text,\n  url,\n  img,\n  name,\n  date\n}) => {\n  return (\n    <Card className=\"PortfolioCard\" url={url}>\n      <figure className=\"PortfolioCard__ImageArea\">\n        <img className=\"PortfolioCard__Image\" src={img} alt=\"\" />\n      </figure>\n      <h2 className=\"PortfolioCard__Name\">{name}</h2>\n\n      <label>\n        Period: <p className=\"PortfolioCard__Date\">{date}</p>\n      </label>\n      <label>\n        Description: <p className=\"PortfolioCard__Text\">{text}</p>\n      </label>\n      <label>\n        Link:\n        <p className=\"PortfolioCard__Text link\">\n          <a className=\"PortfolioCard__Text link\" href={url}>\n            {url}\n          </a>\n        </p>\n      </label>\n    </Card>\n  );\n};\n\nexport default PortfolioCard;\n","import tasumane from '../../images/tasumane-top.png';\nimport seize_the_day from '../../images/seize-the-day.png';\nimport portfolio from '../../images/portfolio.png';\nimport { Portfolio } from './types';\n\nexport const PortFolios: Portfolio[] = [\n  {\n    id: 1,\n    name: 'Seize The Day(個人ブログ)',\n    text: 'Angular × Firebase で作成。Admin 機能なども作成しました',\n    date: '2020.2 - 2020.5',\n    url: 'https://seize-the-day-e7257.firebaseapp.com/',\n    img: seize_the_day\n  },\n  {\n    id: 2,\n    name: '自己紹介用ポートフォリオ',\n    text: '本サイト。React(Typescript)で作成しています。',\n    date: '2019.8',\n    url: 'https://ryotaro-kitamura.github.io/my-home-page',\n    img: portfolio\n  },\n  {\n    id: 3,\n    name: 'Railsポートフォリオ',\n    text: '初めて作成した WebApp です。精度は低いですが一通りの機能を揃えています',\n    date: '2019.5',\n    url: 'https://tasumane.herokuapp.com/',\n    img: tasumane\n  },\n];\n","import React from 'react';\nimport PortfolioCard from '../../components/molecules/PortfolioCard';\nimport { PortFolios } from './data';\n\nexport const PortFolioScreen = () => {\n  return (\n    <div className=\"PortFolioScreen\">\n      <h2>ポートフォリオ集</h2>\n      <div className=\"PortFolioScreen__CardArea\">\n        {PortFolios.map(({ text, img, url, name, date }) => (\n          <PortfolioCard\n            text={text}\n            url={url}\n            name={name}\n            img={img}\n            date={date}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport { Link } from \"react-router-dom\";\nconst aboutIcon = <FontAwesomeIcon icon={[\"far\", \"address-card\"]} />;\nconst portfolioIcon = <FontAwesomeIcon icon={[\"fas\", \"palette\"]} />;\n\nconst NavigationBar = () => {\n  return (\n    <div className='Global__NavigationBar'>\n      <ul className='Global__NavigationBar__Lists'>\n        <li className='Global__NavigationBar__List'>\n          <Link to=''>\n            {aboutIcon}\n            <p>About</p>\n          </Link>\n        </li>\n        <li className='Global__NavigationBar__List'>\n          <Link to='/portfolios'>\n            {portfolioIcon}\n            <p>PortFolios</p>\n          </Link>\n        </li>\n      </ul>\n    </div>\n  );\n};\n\nexport default NavigationBar;\n","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport AboutScreen from './screen/AboutScreen';\nimport { PortFolioScreen } from './screen/PortFolioScreen';\nimport NavigationBar from './components/atoms/NavigationBar';\n\n// fontawsome の設定\nimport { fab } from '@fortawesome/free-brands-svg-icons';\nimport { fas } from '@fortawesome/free-solid-svg-icons';\nimport { far } from '@fortawesome/free-regular-svg-icons';\nimport { library } from '@fortawesome/fontawesome-svg-core';\nlibrary.add(fab, fas, far);\n\nconst App = () => {\n  return (\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <div className=\"Global__Header\">\n        <NavigationBar />\n      </div>\n      <Switch>\n        <div className=\"Global__Contents\">\n          <Route exact path=\"\" component={AboutScreen} />\n          <Route path=\"/portfolios\" component={PortFolioScreen} />\n        </div>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './stylesheets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.Fragment>\n    <App />\n  </React.Fragment>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}